<?xml version="1.0" encoding="UTF-8"?>
<book xmlns="http://docbook.org/ns/docbook" version="5.0"
	xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Juffrou Reference Documentation</title>
	<subtitle><?eval ${project.version}?>
	</subtitle>
	<info>
		<cover>
			<bridgehead>Juffrou</bridgehead>
			<mediaobject>
				<imageobject>
					<imagedata fileref="juffrou_text_new.jpg" format="JPEG" />
				</imageobject>
			</mediaobject>
		</cover>

		<releaseinfo>
			This document refers to version <?eval ${project.version}?>
			of the Juffrou group of libraries.
		</releaseinfo>
		<legalnotice>
			<para>Copies of this document may be made for your own use and for
				distribution to others, provided
				that you do not charge any fee for such copies and further provided that
				each copy contains this
				Copyright Notice, whether distributed in print or electronically.
			</para>
		</legalnotice>
		<author>
			<personname>
				<firstname>Carlos</firstname>
				<surname>Martins</surname>
			</personname>
		</author>
		<copyright>
			<year>2013</year>
			<holder>Juffrou</holder>
		</copyright>

	</info>
	<chapter><title>Introduction</title>
		<para>Juffrou stands for Java Utilities Framework For the Rest Of Us and is a collection of useful classes or mini frameworks to help the java developer.</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/GraphToXml.png" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		<para>Do we need another XML marshalling / unmarshalling framework when there are already so many?</para>
		<para>Well, it's true that there are many XML marshalling frameworks. I have used extensively XStream and Castor and I have huge admiration for those two frameworks. I am also a huge fan of cowtowncoder and his amazing jackson and fasterXml projects.</para>
		<para>But as I got to know those frameworks I saw the good and the not so good in them and was always left with a feeling that there is something lacking.</para>
		<para>I wanted something focused on marshalling java beans. Easy to configure with a choice for mapping file configuration or configuration through code. I wanted it to be easy to use, flexible - easy to extend and something that would handle the marshalling of nested beans into flat XML and back without pain.</para>
		<para>Juffrou-XML is a first in that. So yes - we need this XML marshalling / unmarshalling framework.</para>
	</chapter>
	<part>
		<title>Juffrou Reflect</title>
		<xi:include
			href="../../../../juffrou-reflect/src/site/docbook/reflect-reference.xml"
			xpointer="element(reflect_ref_chpt_01)" />
		<xi:include
			href="../../../../juffrou-reflect/src/site/docbook/reflect-reference.xml"
			xpointer="element(reflect_ref_chpt_02)" />
		<!-- <chapter id="reflect"> <title>Juffrou Reflection</title> <para>This 
			is a temporary placeholder while the documentation on Juffrou Reflection 
			is being prepared.</para> </chapter> -->
	</part>
	<part>
		<title>Juffrou XML</title>
		<xi:include
			href="../../../../juffrou-xml/src/site/docbook/xml-reference.xml"
			xpointer="element(/1/4)" />
		<xi:include
			href="../../../../juffrou-xml/src/site/docbook/xml-reference.xml"
			xpointer="element(xml_ref_chpt_02)" />
			
	</part>
	<!-- <chapter id="xml"> <title>Juffrou XML</title> <xi:include href="../../../../juffrou-xml/src/site/docbook/xml-intro.xml" 
		xpointer="element(/1/1)" /> <xi:include href="../../../../juffrou-xml/src/site/docbook/xml-reference.xml" 
		xpointer="element(/1/5)" /> </chapter> -->
</book>